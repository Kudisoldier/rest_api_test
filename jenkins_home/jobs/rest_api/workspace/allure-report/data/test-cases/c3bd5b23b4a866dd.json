{"uid":"c3bd5b23b4a866dd","name":"test_create_with_invalid_data[book_data2]","fullName":"test_API#test_create_with_invalid_data","historyId":"7f4107221f9c87e56cd41594e291d252","time":{"start":1676242031981,"stop":1676242032001,"duration":20},"description":"Проверяем, что нельзя создать книгу с некорректными данными, нарушиющих типы","descriptionHtml":"<p>Проверяем, что нельзя создать книгу с некорректными данными, нарушиющих типы</p>\n","status":"failed","statusMessage":"AssertionError: assert 201 == 400\n +  where 201 = ApiResponse(json={'book': {'author': False, 'id': 22, 'isElectronicBook': 2, 'name': 'asd', 'year': 'asd'}}, text='{\"b...lse,\"id\":22,\"isElectronicBook\":2,\"name\":\"asd\",\"year\":\"asd\"}}\\n', status_code=201, url='http://rest_api:5000/api/books').status_code","statusTrace":"client = <api.api_client.ApiClient object at 0xffff9bccd7f0>\nbook_data = ('asd', False, 2, 'asd')\n\n    @pytest.mark.negative\n    @pytest.mark.parametrize(\"book_data\", [(2, 'asd'), (2, 2, 2, \"asd\"), ('asd', False, 2, \"asd\")])\n    def test_create_with_invalid_data(client, book_data):\n        \"\"\"Проверяем, что нельзя создать книгу с некорректными данными, нарушиющих типы\"\"\"\n        book_response = client.add_book(*book_data)\n>       assert book_response.status_code == 400\nE       assert 201 == 400\nE        +  where 201 = ApiResponse(json={'book': {'author': False, 'id': 22, 'isElectronicBook': 2, 'name': 'asd', 'year': 'asd'}}, text='{\"b...lse,\"id\":22,\"isElectronicBook\":2,\"name\":\"asd\",\"year\":\"asd\"}}\\n', status_code=201, url='http://rest_api:5000/api/books').status_code\n\n/code/test_API.py:96: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1676242031546,"stop":1676242031557,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Api client init","time":{"start":1676242031980,"stop":1676242031980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"Api client init::0","time":{"start":1676242032007,"stop":1676242032007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"negative"},{"name":"suite","value":"test_API"},{"name":"host","value":"jenkins"},{"name":"thread","value":"887-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"book_data","value":"('asd', False, 2, 'asd')"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["negative"]},"source":"c3bd5b23b4a866dd.json","parameterValues":["('asd', False, 2, 'asd')"]}