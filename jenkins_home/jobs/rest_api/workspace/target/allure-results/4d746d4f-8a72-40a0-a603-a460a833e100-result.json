{"name": "Позитивный тест получения списка книг", "status": "broken", "statusDetails": {"message": "pydantic.error_wrappers.ValidationError: 2 validation errors for Book\nisElectronicBook\n  value could not be parsed to a boolean (type=type_error.bool)\nyear\n  value is not a valid integer (type=type_error.integer)", "trace": "client = <api.api_client.ApiClient object at 0xffff93c0d970>\n\n    @allure.title(\"Позитивный тест получения списка книг\")\n    @pytest.mark.positive\n    def test_books_retrieval(client):\n        \"\"\"Проверяем, что можно получить список книг и они соответствуют модели данных\"\"\"\n        books_response = client.get_books()\n        assert books_response.status_code == 200\n        for elem in books_response.json['books']:\n>           assert Book(**elem)\n\n/code/test_API.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = Book()\ndata = {'author': False, 'id': 6, 'isElectronicBook': 2, 'name': 'asd', ...}\nvalues = {'author': 'False', 'id': 6, 'name': 'asd'}\nfields_set = {'author', 'id', 'isElectronicBook', 'name', 'year'}\nvalidation_error = ValidationError(model='Book', errors=[{'loc': ('isElectronicBook',), 'msg': 'value could not be parsed to a boolean', 'type': 'type_error.bool'}, {'loc': ('year',), 'msg': 'value is not a valid integer', 'type': 'type_error.integer'}])\n\n    def __init__(__pydantic_self__, **data: Any) -> None:\n        \"\"\"\n        Create a new model by parsing and validating input data from keyword arguments.\n    \n        Raises ValidationError if the input data cannot be parsed to form a valid model.\n        \"\"\"\n        # Uses something other than `self` the first arg to allow \"self\" as a settable attribute\n        values, fields_set, validation_error = validate_model(__pydantic_self__.__class__, data)\n        if validation_error:\n>           raise validation_error\nE           pydantic.error_wrappers.ValidationError: 2 validation errors for Book\nE           isElectronicBook\nE             value could not be parsed to a boolean (type=type_error.bool)\nE           year\nE             value is not a valid integer (type=type_error.integer)\n\n/usr/local/lib/python3.9/dist-packages/pydantic/main.py:342: ValidationError"}, "description": "Проверяем, что можно получить список книг и они соответствуют модели данных", "start": 1676239552565, "stop": 1676239552599, "uuid": "565a0397-3f23-44c2-81dd-f273a8e5fbfc", "historyId": "38eac17d3023f9d80b5a56188c6e5ced", "testCaseId": "17feda61cf5d38ebfe2842680087cf31", "fullName": "test_API#test_books_retrieval", "labels": [{"name": "tag", "value": "positive"}, {"name": "suite", "value": "test_API"}, {"name": "host", "value": "jenkins"}, {"name": "thread", "value": "811-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_API"}]}